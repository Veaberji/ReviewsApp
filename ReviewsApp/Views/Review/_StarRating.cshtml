@model StarRatingViewModel

<form asp-antiforgery="true">
    <div class="fs-5 mt-2 col-auto" id="stars-container">
        Grade @Model.ProductName
        @for (int i = UserGradeConstrains.UserMinGrade; i <= UserGradeConstrains.UserMaxGrade; i++)
        {
            if (i <= Model.CurrentUserRating)
            {
                <i class="fas fa-star text-warning" id=@($"rating-star{@i}")></i>
            }
            else
            {
                <i class="fas fa-star" id=@($"rating-star{@i}")></i>
            }
        }
        @if (Model.CurrentUserRating.HasValue)
        {
            <span class="fas fa-trash-alt danger ms-2 fs-6 align-middle"
              id="remove-grade"></span>
        }
        else
        {
            <span class="fas fa-trash-alt danger ms-2 fs-6 align-middle"
              id="remove-grade" hidden></span>
        }
    </div>
</form>
<script>
    let starBaseIdName = "rating-star";

    $(function() {
        let stars = getAllStarElements();
        stars.each(function() {
            $(this).on("click", () => changeGrade(this));
        });

    });

    $(function() {
        $("#remove-grade").on("click", () => removeGrade());

    });

    function getAllStarElements() {
        return $("#stars-container").children("i");
    }

    function changeGrade(star) {
        let grade = getGrade(star);
        changeStarsStyle(grade);
        showRemoveGrade();
        let gradeViewModel = createGradeViewModel(grade);
        sendChangeGradeRequest(gradeViewModel);
    }

    function getGrade(star) {
        return star.id.replace(starBaseIdName, "");
    }

    function getReviewId() {
        return $("#single-review-id").val();
    }

    function changeStarsStyle(grade) {
        let stars = getAllStarElements();
        stars.each(function() {
            removeMark($(this));
        });
        for (let i = 1; i <= grade; i++) {
            addMark($(`#${starBaseIdName}${i}`));
        }
    }

    function removeMark(star) {
        star.removeClass("text-warning");
    }

    function addMark(star) {
        star.addClass("text-warning");
    }

    function sendChangeGradeRequest(gradeViewModel) {
        $.ajax({
            url: '/Review/GradeReview/',
            headers: {
                "RequestVerificationToken":
                    $('input[name="__RequestVerificationToken"]').val()
            },
            data: { "model": gradeViewModel },
            type: "POST",
            success: function(data) {
                changeRating(data);
            },
            error: function(errorResponse) {
                console.log(errorResponse.responseText);
            },
            failure: function(failureResponse) {
                console.log(failureResponse.responseText);
            }
        });
    }

    function createGradeViewModel(grade) {
        let reviewId = getReviewId();
        let data = {
            ReviewId: reviewId,
            Grade : grade
        };
        return data;
    }

    function changeRating(data) {
        setAverageUserRating(data.rating);
        setTotalRates(data.totalRates);
        setDescription(data.totalRates);
    }

    function setAverageUserRating(rating) {
        if (rating > 0) {
            $("#AverageUserRating").text(rating.toLocaleString());
        } else {
            $("#AverageUserRating").empty();
        }
    }

    function setTotalRates(totalRates) {
        if (totalRates > 0) {
            $("#TotalRates").text(totalRates);
        } else {
            $("#TotalRates").text("Not Rated");
        }
    }

    function setDescription(totalRates) {
        let text = " )";
        if (totalRates === 1) {
            text = "Rate )";
        } else if (totalRates > 1) {
            text = "Rates )";
        }
        $("#RatingDescription").text(text);
    }

    function removeGrade() {
        hideRemoveGrade();
        removeStarsMarks();
        sendRemoveGradeRequest();
    }

    function removeStarsMarks() {
        let stars = getAllStarElements();
        stars.each(function() {
            removeMark($(this));
        });
    }

    function hideRemoveGrade() {
        $("#remove-grade").prop("hidden", true);
    }

    function showRemoveGrade() {
        $("#remove-grade").attr("hidden", false);
    }

    function sendRemoveGradeRequest() {
        $.ajax({
            url: '/Review/RemoveGrade/',
            headers: {
                "RequestVerificationToken":
                    $('input[name="__RequestVerificationToken"]').val()
            },
            data: { "reviewId": getReviewId() },
            type: "POST",
            success: function(data) {
                changeRating(data);
            },
            error: function(errorResponse) {
                console.log(errorResponse.responseText);
            },
            failure: function(failureResponse) {
                console.log(failureResponse.responseText);
            }
        });
    }
</script>
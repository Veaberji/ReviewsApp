@model SingleReviewViewModel

<head>
    <title>@AppConfigs.Title - @Model.Review.Title</title>
    <script src="~/lib/jquery/jquery.min.js" type="text/javascript"></script>
</head>

<div class="card mt-3">
    <input id="single-review-id"
           value="@Model.Review.Id"
           hidden />
    <h5 class="card-title mb-0">@Model.Review.Title</h5>
    <div class="card-body">
        @{
            await Html.RenderPartialAsync("_ReviewHeader", Model.Review);
        }
    </div>

    @{
        await Html.RenderPartialAsync("_ImageSlider", Model.Review.ImagesUrls);
    }

    @{
        if (User.Identity?.IsAuthenticated ?? false)
        {
            await Html.RenderPartialAsync("_StarRating", Model.StarRating);
        }
    }

    <div class="card-body text-start">
        <p class="card-text">@Model.Review.Body</p>
    </div>
    <div class="m-3">
        @{
            await Html.RenderPartialAsync("_Tags", Model.Review.Tags);
        }
    </div>
    <div class="text-warning mb-3">
        @{
            if (User.Identity?.IsAuthenticated ?? false)
            {
                <input id="IsLikedByCurrentUser"
                   value="@Model.Review.IsLikedByCurrentUser"
                   hidden />
                await Html.RenderPartialAsync("_Like", Model.Review.TotalLikes);
            }
            else
            {
                await Html.RenderPartialAsync("_LikeReadOnly", Model.Review.TotalLikes);
            }
        }
    </div>
</div>
@if (User.Identity?.IsAuthenticated ?? false)
{
    <div class="text-start col-6">
        @foreach (var comment in Model.Comments)
        {
            await Html.RenderPartialAsync("_Comments", comment);
        }
    </div>
    <div class="card-body text-start">
        @{
            await Html.RenderPartialAsync("CreateComment", Model.CreateComment);
        }
    </div>
}
